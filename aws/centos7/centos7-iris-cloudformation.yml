Parameters:
  KeyName:
    ConstraintDescription: The name of an existing EC2 KeyPair.
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName

  SubnetId:
    Description: Subnet where the EC2 instance will be launched
    Type: AWS::EC2::Subnet::Id

  SecurityGroupId:
    Description: Security group allowing inbound access to port 22
    Type: AWS::EC2::SecurityGroup::Id

  InstanceType:
    AllowedValues:
    - t2.micro
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - t2.xlarge
    - t2.2xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    ConstraintDescription: Must be a valid EC2 instance type.
    Default: m4.2xlarge
    Description: EC2 instance type
    Type: String

  CustomAmiId:
    Description: Custom CentOS 7 AMI ID (optional)
    Type: String

  UserPassword:
    Type: String
    NoEcho: true
    Description: Password for the 'vncgui1' user that will be created
    ConstraintDescription: must be 8 or more characters in length
    MinLength: 8

  IamInstanceProfile:
    Type: String
    Description: Physical ID of an instance profile to associate with the EC2 instance (optional)

  SetupScriptUrl:
    Type: String
    Description: URL to the centos7-iris-setup.sh script used to configure the EC2 instance
    AllowedPattern: '^(https?|ftp|file)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]'
    ConstraintDescription: Must be a valid HTTP or HTTPS URL
    Default: 'https://raw.githubusercontent.com/greg2020/iris-setup/master/aws/centos7/centos7-iris-setup-gnome.sh'

  VolumeSize:
    Type: Number
    MinValue: 30
    Description: Size of the Irs /db directory (in GB) for the Iris data files
    Default: 30
    ConstraintDescription: Must be greater than or equal to 30

  VolumeType:
    Type: String
    AllowedValues:
    - gp2
    - standard
    - st1
    - sc2
    Default: gp2
    Description: Type of EBS volume to create

  PublicIpAddress:
    Type: String
    AllowedValues:
    - true
    - false
    Default: true
    Description: Associate a public IP address with the created EC2 instance?

Conditions:
  UseIamInstanceProfile: !Not [!Equals [!Ref IamInstanceProfile, ""]]
  AddPublicIpAddress: !Equals [!Ref PublicIpAddress, "true"]
  UseCustomAmi: !Not [!Equals [!Ref CustomAmiId, ""]]

Mappings:
  RegionMap:
    us-east-1:
      hvm: ami-6d1c2007
    us-east-2:
      hvm: ami-6a2d760f
    us-west-1:
      hvm: ami-af4333cf
    us-west-2:
      hvm: ami-d2c924b2
    ca-central-1:
      hvm: ami-af62d0cb
    eu-west-1:
      hvm: ami-7abd0209
    eu-central-1:
      hvm: ami-9bf712f4
    eu-west-2:
      hvm: ami-bb373ddf
    ap-northeast-1:
      hvm: ami-eec1c380
    ap-northeast-2:
      hvm: ami-c74789a9
    ap-southeast-1:
      hvm: ami-f068a193
    ap-southeast-2:
      hvm: ami-fedafc9d
    ap-south-1:
      hvm: ami-95cda6fa
    sa-east-1:
      hvm: ami-26b93b4a

Resources:
  Ec2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !If [UseCustomAmi, !Ref CustomAmiId, !FindInMap [RegionMap, !Ref "AWS::Region", "hvm"]]
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      IamInstanceProfile: !If [UseIamInstanceProfile, !Ref IamInstanceProfile, !Ref "AWS::NoValue"]
      Tags:
      - Key: Name
        Value: !Ref AWS::StackName
      NetworkInterfaces:
      - AssociatePublicIpAddress: !If [AddPublicIpAddress, true, false]
        DeleteOnTermination: true
        DeviceIndex: "0"
        GroupSet:
        - !Ref SecurityGroupId
        SubnetId:
          Ref: SubnetId
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          curl -o /opt/centos7-iris-setup.sh -fsSL ${SetupScriptUrl}
          chmod u+x /opt/centos7-iris-setup.sh
          . /opt/centos7-iris-setup.sh -p ${UserPassword}
          shutdown -r now

  NewVolume:
      Type: AWS::EC2::Volume
      Properties:
        Size: !Ref VolumeSize
        AvailabilityZone: !GetAtt Ec2Instance.AvailabilityZone
        VolumeType: !Ref VolumeType
        Tags:
        - Key: Name
          Value: !Ref AWS::StackName

  MountPoint:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      InstanceId: !Ref Ec2Instance
      VolumeId: !Ref NewVolume
      Device: /dev/sdh

Outputs:
  InstancePublicIp:
    Description: public IP address of the Visallo development instance
    Value: !If [AddPublicIpAddress, !GetAtt Ec2Instance.PublicIp, "none"]
  InstancePrivateIp:
    Description: private IP address of the Visallo development instance
    Value: !GetAtt Ec2Instance.PrivateIp

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Network Settings
      Parameters:
        - KeyName
        - SubnetId
        - SecurityGroupId
    - Label:
        default: Instance Settings
      Parameters:
        - InstanceType
        - CustomAmiId
        - IamInstanceProfile
        - PublicIpAddress
        - SetupScriptUrl
        - UserPassword
    - Label:
        default: Volume Settings
      Parameters:
        - VolumeType
        - VolumeSize
    ParameterLabels:
      KeyName:
        default: Key Name
      SubnetId:
        default: Subnet ID
      SecurityGroupId:
        default: Security Group ID
      InstanceType:
        default: Instance Type
      CustomAmiId:
        default: Custom AMI ID
      UserPassword:
        default: User Password
      PublicIpAddress:
        default: Add Public IP Address
      SetupScriptUrl:
        default: URL to Setup Script
      IamInstanceProfile:
        default: IAM Instance Profile
      VolumeType:
        default: Volume Type
      VolumeSize:
        default: Volume Size
